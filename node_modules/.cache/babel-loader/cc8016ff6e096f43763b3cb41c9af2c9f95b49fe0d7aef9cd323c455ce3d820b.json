{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rishav\\\\reactapp\\\\netflixclone\\\\src\\\\Row.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"./axios\";\nimport \"./Row.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\nconst Row = props => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(props.fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [props.fetchUrl]);\n  console.table(movies);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row_poster\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `${base_url}${movie.poster_path}`,\n        alt: movie.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Row, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n_c = Row;\nexport default Row;\nvar _c;\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","base_url","Row","props","_s","movies","setMovies","fetchData","request","get","fetchUrl","data","results","console","table","children","title","fileName","_jsxFileName","lineNumber","columnNumber","className","map","movie","src","poster_path","alt","name","_c","$RefreshReg$"],"sources":["C:/Users/Rishav/reactapp/netflixclone/src/Row.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"./axios\";\r\nimport \"./Row.scss\";\r\nconst base_url=\"https://image.tmdb.org/t/p/original/\";\r\n\r\nconst Row = (props) => {\r\n\r\n    const [movies, setMovies] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const request = await axios.get(props.fetchUrl);\r\n            setMovies(request.data.results);\r\n            return request;\r\n        }\r\n        fetchData();\r\n    }, [props.fetchUrl]);\r\n\r\n    console.table(movies);\r\n\r\n    return (\r\n        <>\r\n            <h1>{props.title}</h1>\r\n\r\n            <div className=\"row_poster\">\r\n\r\n                {movies.map(movie => (\r\n                <img src={`${base_url}${movie.poster_path}`} alt={movie.name} />\r\n                  \r\n                ))}\r\n\r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\nexport default Row;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACpB,MAAMC,QAAQ,GAAC,sCAAsC;AAErD,MAAMC,GAAG,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAEnB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACZ,eAAea,SAASA,CAAA,EAAG;MACvB,MAAMC,OAAO,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAACN,KAAK,CAACO,QAAQ,CAAC;MAC/CJ,SAAS,CAACE,OAAO,CAACG,IAAI,CAACC,OAAO,CAAC;MAC/B,OAAOJ,OAAO;IAClB;IACAD,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,CAACJ,KAAK,CAACO,QAAQ,CAAC,CAAC;EAEpBG,OAAO,CAACC,KAAK,CAACT,MAAM,CAAC;EAErB,oBACIP,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBACIjB,OAAA;MAAAiB,QAAA,EAAKZ,KAAK,CAACa;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAEtBtB,OAAA;MAAKuB,SAAS,EAAC,YAAY;MAAAN,QAAA,EAEtBV,MAAM,CAACiB,GAAG,CAACC,KAAK,iBACjBzB,OAAA;QAAK0B,GAAG,EAAG,GAAEvB,QAAS,GAAEsB,KAAK,CAACE,WAAY,EAAE;QAACC,GAAG,EAAEH,KAAK,CAACI;MAAK;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAE9D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAED,CAAC;EAAA,eAER,CAAC;AAEX,CAAC;AAAAhB,EAAA,CA9BKF,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AA+BT,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}